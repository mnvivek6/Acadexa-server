"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userSignupController_1 = require("../controller/user/userSignupController");
const userLoginController_1 = require("../controller/user/userLoginController");
const home_1 = require("../controller/user/home");
const ClientauthMiddleware_1 = require("../middlewares/ClientauthMiddleware");
const profile_1 = require("../controller/user/profile");
const coursePurchase_1 = require("../controller/user/coursePurchase");
const searchCourse_1 = require("../controller/course/searchCourse");
const chat_1 = require("../controller/chat/chat");
const sendMessage_1 = require("../controller/chat/sendMessage");
const userRoute = express_1.default.Router();
userRoute.post('/signup', userSignupController_1.userSignup);
userRoute.post('/login', userLoginController_1.userLogin);
userRoute.post('/verifyEmail/:id', userSignupController_1.verifyEmail);
userRoute.get('/getCategory', home_1.categories);
userRoute.get('/allcourses', ClientauthMiddleware_1.userAuthToken, home_1.coursee);
userRoute.get('/singleCourse/:id', ClientauthMiddleware_1.userAuthToken, home_1.sigelCourse);
userRoute.get('/profile', ClientauthMiddleware_1.userAuthToken, profile_1.profile);
userRoute.get('/purchaseCourse/:id', ClientauthMiddleware_1.userAuthToken, home_1.sigelCourse);
userRoute.get('/singlecategory/:id', ClientauthMiddleware_1.userAuthToken, home_1.CategoryByid);
userRoute.get('/getTutor/:tutor', ClientauthMiddleware_1.userAuthToken, home_1.SingleTutor);
userRoute.get('/coursebytutor', ClientauthMiddleware_1.userAuthToken, home_1.CourseByIdTUtor);
userRoute.post('/editprofile', ClientauthMiddleware_1.userAuthToken, profile_1.EditedProfile);
userRoute.post('/paymentData', ClientauthMiddleware_1.userAuthToken, coursePurchase_1.Paymentdetails);
userRoute.get('/purchasedcourse', ClientauthMiddleware_1.userAuthToken, profile_1.purchasedcourse);
userRoute.get('/checkingpurchased/:courseid', ClientauthMiddleware_1.userAuthToken, profile_1.Chekingpurchased);
userRoute.get('/getcoursesbysearch', ClientauthMiddleware_1.userAuthToken, searchCourse_1.SearchCourseFilterSort);
userRoute.get('/searchsortfilter', ClientauthMiddleware_1.userAuthToken, searchCourse_1.SearchCourseFilterSort);
userRoute.get('/coursebycategory/:id', ClientauthMiddleware_1.userAuthToken, home_1.findCoursebycategory);
userRoute.post('/createchat/:tutorid', ClientauthMiddleware_1.userAuthToken, chat_1.createChat);
userRoute.post('/sendingtotutor', ClientauthMiddleware_1.userAuthToken, sendMessage_1.messageTotutor);
userRoute.get('/allchatsbychatid/:chatid', sendMessage_1.AllmessageBychatid);
exports.default = userRoute;
